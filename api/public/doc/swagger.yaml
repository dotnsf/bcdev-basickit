swagger: '2.0'
info:
  description: BCDev Basic Kit on Hyperledger Fabric API Document
  version: 0.0.1
  title: BCDev Basic Kit プラットフォーム REST API
host: localhost:6001
basePath: /
tags:
  - name: user
    description: ユーザーデータに対する処理
  - name: item
    description: 商品データに対する処理
schemes:
  - http
  - https
paths:
  /api/adminuser:
    post:
      tags:
        - user
      summary: 管理者ユーザー作成
      description: 管理者ロールを持ったユーザー admin を作成します。ブロックチェーン環境構築直後に一回だけ実行します。
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AdminUserRequest'
      responses:
        '200':
          description: 成功
        '400':
          description: 作成済み
        '500':
          description: サーバーエラー
  /api/login:
    post:
      tags:
        - user
      summary: ユーザー認証
      description: ユーザーID、パスワードを用いて認証します。ここで取得されるtokenを他のAPIの認証に使用します
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/LoginRequest'
      responses:
        '200':
          description: ログイン成功
          schema:
            $ref: '#/definitions/LoginResult'
        '401':
          description: ログインエラー
  /api/user:
    get:
      tags:
        - user
      summary: ユーザー取得
      description: 登録済みのユーザーを取得する
      produces:
        - application/json
      parameters:
        - name: id
          type: string
          in: query
          description: ユーザーID
          required: true
        - name: token
          type: string
          in: query
          description: 認証トークン
      responses:
        '200':
          description: 取得成功
          schema:
            $ref: '#/definitions/UserResult'
        '401':
          description: ログインエラー
        '404':
          description: 該当ユーザーが見つからない
        '500':
          description: 実行エラー
    post:
      tags:
        - user
      summary: ユーザー作成／更新
      description: ユーザーを新規に作成（または更新）する
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UserRequestToken'
      responses:
        '200':
          description: 成功
        '401':
          description: 権限エラー
        '500':
          description: 実行エラー
    delete:
      tags:
        - user
      summary: ユーザー削除
      description: ユーザーを削除する
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UserIdRequestToken'
      responses:
        '200':
          description: 成功
        '401':
          description: 権限エラー
        '404':
          description: 該当ユーザーが見つからない
        '500':
          description: 実行エラー
  /api/users:
    get:
      tags:
        - user
      summary: ユーザーを複数取得
      description: 複数のユーザーをまとめて取得する
      produces:
        - application/json
      parameters:
        - name: token
          type: string
          in: query
          description: 認証トークン
      responses:
        '200':
          description: 成功
        '401':
          description: 権限エラー
        '500':
          description: 実行エラー
  /api/item:
    get:
      tags:
        - item
      summary: アイテム取得
      description: アイテムオブジェクトを取得する
      produces:
        - application/json
      parameters:
        - name: id
          type: string
          in: query
          description: アイテムID
          required: true
        - name: token
          type: string
          in: query
          description: 認証トークン
      responses:
        '200':
          description: 取得成功
        '401':
          description: ログインエラー
        '404':
          description: 該当データが見つからない
        '500':
          description: 実行エラー
    post:
      tags:
        - item
      summary: アイテム作成／更新
      description: アイテムを新規に作成（または更新）する
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ItemRequestToken'
      responses:
        '200':
          description: 成功
        '401':
          description: 権限エラー
        '500':
          description: 実行エラー
    delete:
      tags:
        - item
      summary: アイテム削除
      description: アイテムを削除する
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ItemIdRequestToken'
      responses:
        '200':
          description: 成功
        '401':
          description: 権限エラー
        '404':
          description: 該当データが見つからない
        '500':
          description: 実行エラー
  /api/items:
    get:
      tags:
        - item
      summary: アイテムを複数取得
      description: 複数のアイテムをまとめて取得する
      produces:
        - application/json
      parameters:
        - name: token
          type: string
          in: query
          description: 認証トークン
      responses:
        '200':
          description: 成功
        '401':
          description: 権限エラー
        '500':
          description: 実行エラー
definitions:
  AdminUserRequest:
    type: object
    properties:
      password:
        type: string
        format: password
  LoginRequest:
    type: object
    properties:
      id:
        type: string
        format: string
      password:
        type: string
        format: password
  UserRequest:
    type: object
    properties:
      id:
        type: string
        description: ユーザーID
      password:
        type: string
        description: ユーザーパスワード
      name:
        type: string
        description: 名前
      role:
        type: integer
        description: ロール（0:管理者）
  UserRequestToken:
    type: object
    properties:
      id:
        type: string
        description: ユーザーID
      password:
        type: string
        description: ユーザーパスワード
      name:
        type: string
        description: 名前
      role:
        type: integer
        description: ロール（0:管理者）
      token:
        type: string
        description: 認証時に取得したトークン
  UsersRequest:
    type: array
    items:
      $ref: '#/definitions/UserRequest'
  UserIdRequest:
    type: object
    properties:
      id:
        type: string
        description: ユーザーID
  UserIdRequestToken:
    type: object
    properties:
      id:
        type: string
        description: ユーザーID
      token:
        type: string
        description: 認証時に取得したトークン
  ItemRequest:
    type: object
    properties:
      id:
        type: string
        description: アイテムID
      user_id:
        type: string
        description: ユーザーID
      body:
        type: string
        description: 説明本文
      datetime:
        type: string
        description: 作成日時
  ItemRequestToken:
    type: object
    properties:
      id:
        type: string
        description: アイテムID
      user_id:
        type: string
        description: ユーザーID
      body:
        type: string
        description: 説明本文
      datetime:
        type: string
        description: 作成日時
      token:
        type: string
        description: 認証時に取得したトークン
  ItemsRequest:
    type: array
    items:
      $ref: '#/definitions/ItemRequest'
  ItemIdRequest:
    type: object
    properties:
      id:
        type: string
        description: アイテムID
  ItemIdRequestToken:
    type: object
    properties:
      id:
        type: string
        description: アイテムID
      token:
        type: string
        description: 認証時に取得したトークン
  TokenRequest:
    type: object
    properties:
      token:
        type: string
        description: 認証時に取得したトークン
  LoginResult:
    type: object
    properties:
      status:
        type: boolean
        description: 'true: 成功、 false: 失敗'
      token:
        type: string
        format: string
        description: アクセストークン
      message:
        type: string
        format: string
        description: エラーメッセージ
  UserResult:
    type: object
    properties:
      id:
        type: string
        description: ユーザーID
      name:
        type: string
        description: 名前
      role:
        type: integer
        description: ロール（0:管理者）
  ItemResult:
    type: object
    properties:
      id:
        type: string
        description: アイテムID
      user_id:
        type: string
        description: ユーザーID
      body:
        type: string
        description: 説明本文
      datetime:
        type: string
        description: 作成日時
  UserIdResult:
    type: object
    properties:
      id:
        type: string
        description: ユーザーID
  ItemIdResult:
    type: object
    properties:
      id:
        type: string
